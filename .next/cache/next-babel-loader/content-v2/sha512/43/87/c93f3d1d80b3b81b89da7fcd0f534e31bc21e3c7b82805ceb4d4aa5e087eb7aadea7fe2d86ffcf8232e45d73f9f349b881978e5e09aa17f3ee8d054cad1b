{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/karenine/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/karenine/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,sBACI,QAAC,YAAD;AAAc,IAAA,KAAK,EAAGA,KAAK,CAACC,UAAN,CAAiBC,KAAvC;AACA,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KADxB;AAEA,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAF1B;AAGA,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAH9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQN,a;;AA2DT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\n\nfunction MeetupDetails(props){\n    return (\n        <MeetupDetail image= {props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address} \n        description={props.meetupData.description}\n        />\n        \n    );\n}\n\nexport async function getStaticPaths(){\n\n    const client = await MongoClient.connect('mongodb+srv://admin-karen:test123@cluster0.pdmmvak.mongodb.net/?retryWrites=true&w=majority');\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id:1}).toArray();\n\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map((meetup) => ({\n            params: {meetupId: meetup._id.toString()},\n        })),     \n    };\n}\n\nexport async function getStaticProps(context){\n\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect('mongodb+srv://admin-karen:test123@cluster0.pdmmvak.mongodb.net/?retryWrites=true&w=majority');\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({ _id: new ObjectId(meetupId), });\n\n    client.close();\n\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description,\n            },\n        },\n    };\n }\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}