{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/karenine/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from 'next/head';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetup._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://admin-karen:test123@cluster0.pdmmvak.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://admin-karen:test123@cluster0.pdmmvak.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/karenine/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","Fragment","Head","MeetupDetails","props","meetup","_id","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQA,KAAK,CAACC,MAAN,CAAaC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAIA,QAAC,YAAD;AAAc,MAAA,KAAK,EAAGF,KAAK,CAACG,UAAN,CAAiBC,KAAvC;AACA,MAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,KADxB;AAEA,MAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG,OAF1B;AAGA,MAAA,WAAW,EAAEN,KAAK,CAACG,UAAN,CAAiBI;AAH9B;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;AAED,OAAO,eAAeC,cAAf,GAA+B;AAElC,QAAMC,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CAAoB,6FAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACb,IAAAA,GAAG,EAAC;AAAL,GAA3B,EAAoCc,OAApC,EAAtB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAanB,MAAD,KAAa;AAC5BoB,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAErB,MAAM,CAACC,GAAP,CAAWqB,QAAX;AAAX;AADoB,KAAb,CAAZ;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAEzC,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMb,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CAAoB,6FAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMa,cAAc,GAAG,MAAMd,iBAAiB,CAACe,OAAlB,CAA0B;AAAEzB,IAAAA,GAAG,EAAE,IAAIP,QAAJ,CAAa2B,QAAb;AAAP,GAA1B,CAA7B;AAEAb,EAAAA,MAAM,CAACQ,KAAP;AAGA,SAAO;AACHjB,IAAAA,KAAK,EAAE;AACHG,MAAAA,UAAU,EAAE;AACRyB,QAAAA,EAAE,EAAEF,cAAc,CAACxB,GAAf,CAAmBqB,QAAnB,EADI;AAERlB,QAAAA,KAAK,EAAEqB,cAAc,CAACrB,KAFd;AAGRC,QAAAA,OAAO,EAAEoB,cAAc,CAACpB,OAHhB;AAIRF,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAJd;AAKRG,QAAAA,WAAW,EAAEmB,cAAc,CAACnB;AALpB;AADT;AADJ,GAAP;AAWF;AAEF,eAAeR,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from 'next/head';\n\n\nfunction MeetupDetails(props){\n    return (\n        <Fragment>\n            <Head>\n                <title>{props.meetup._id}</title>\n            </Head>\n        <MeetupDetail image= {props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address} \n        description={props.meetupData.description}\n        />\n        </Fragment>\n        \n    );\n}\n\nexport async function getStaticPaths(){\n\n    const client = await MongoClient.connect('mongodb+srv://admin-karen:test123@cluster0.pdmmvak.mongodb.net/?retryWrites=true&w=majority');\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id:1}).toArray();\n\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map((meetup) => ({\n            params: {meetupId: meetup._id.toString()},\n        })),     \n    };\n}\n\nexport async function getStaticProps(context){\n\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect('mongodb+srv://admin-karen:test123@cluster0.pdmmvak.mongodb.net/?retryWrites=true&w=majority');\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({ _id: new ObjectId(meetupId), });\n\n    client.close();\n\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description,\n            },\n        },\n    };\n }\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}